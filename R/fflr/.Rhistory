run_examples()
library(devtools)
devtools::dev_example()
dev_example
library(httr)
library(XML)
library(RJSONIO)
library(ggplot2)
devtools::use_package('dplyr')
devtools::use_package('httr')
devtools::use_package('XML')
devtools::use_package('RJSONIO')
devtools::use_package('ggplot2')
library(dplyr)
creds <- read.table("/personal/keys/yahoo.txt", stringsAsFactors=F)
creds <- read.table("personal/keys/yahoo.txt", stringsAsFactors=F)
creds
consumer.key <- creds[1,1]
consumer.secret <- creds[2,1]
consumer.key
consumer.secret
oauth_endpoints("yahoo")
myapp <- oauth_app("yahoo", key = consumer.key, secret = consumer.secret)
token <- oauth1.0_token(oauth_endpoints("yahoo"), myapp)
ff.url <- "http://fantasysports.yahooapis.com/fantasy/v2/game/nfl?format=json"
game.key.json <- GET(ff.url, config(token = token))
game.key.list <- fromJSON(as.character(game.key.json), asText=T)
game.key <- game.key.list$fantasy_content$game[[1]]["game_key"]
game.key
game.key.list
league.id <- "891274"
league.key <- paste0(game.key, ".l.", league.id)
league.key
league.url <- "http://fantasysports.yahooapis.com/fantasy/v2/league/"
game.num <- 2
tmp <- my.team.matchups.list$fantasy_content["team"][[1]][[2]]$matchups
my.team.id <- "4"
my.team.key <- paste0(league.key, ".t.", my.team.id)
team.url <- "http://fantasysports.yahooapis.com/fantasy/v2/team/"
my.team.stats.json <- GET(paste0(team.url, my.team.key, "/stats?format=json"),
config(token = token))
my.team.standings.json <- GET(paste0(team.url, my.team.key,
"/standings?format=json"), config(token = token))
my.team.matchups.json <- GET(paste0(team.url, my.team.key,
"/matchups?format=json"), config(token = token))
my.team.matchups.list <- fromJSON(as.character(my.team.matchups.json), asText=T)
game.num <- 2
tmp <- my.team.matchups.list$fantasy_content["team"][[1]][[2]]$matchups
opp.score <- tmp$'0'$matchup$`0`$teams$`1`$team[[2]]$team_points["total"]
opp.score <- c(opp.score, sapply(as.character(1:(game.num-1)),
function(x)tmp[x][[x]]$matchup$`0`$teams$`1`$team[[2]]$team_points$total))
my.score <- tmp$'0'$matchup$`0`$teams$`0`$team[[2]]$team_points["total"]
my.score <- c(my.score, sapply(as.character(1:(game.num-1)),
function(x)tmp[x][[x]]$matchup$`0`$teams$`0`$team[[2]]$team_points$total))
my.df <- data.frame(cbind(game=rep(1:length(my.score), 2),
team=c(rep("me", length(my.score)), rep("them", length(my.score))),
score=as.numeric(c(my.score, opp.score))))
my.df$game <- factor(my.df$game, levels=1:game.num)
my.df$score <- as.numeric(as.character(my.df$score))
p1 <- ggplot(my.df, aes(x=game, y=score, color=team, group=team)) +
geom_point() + geom_line() + scale_y_continuous()
p1
# my personal leagueid, you will have to use your own, mine is private
league.id <- "891274"
league.key <- paste0(game.key, ".l.", league.id)
league.url <- "http://fantasysports.yahooapis.com/fantasy/v2/league/"
my.team.id <- "4"
my.team.key <- paste0(league.key, ".t.", my.team.id)
team.url <- "http://fantasysports.yahooapis.com/fantasy/v2/team/"
# lots of endpoints to play with, more here...
# http://developer.yahoo.com/fantasysports/guide/
my.team.stats.json <- GET(paste0(team.url, my.team.key, "/stats?format=json"),
config(token = token))
my.team.standings.json <- GET(paste0(team.url, my.team.key,
"/standings?format=json"), config(token = token))
my.team.matchups.json <- GET(paste0(team.url, my.team.key,
"/matchups?format=json"), config(token = token))
my.team.matchups.list <- fromJSON(as.character(my.team.matchups.json), asText=T)
# number of games played
game.num <- 2
# get the opponent scores for my matchups for the entire season
tmp <- my.team.matchups.list$fantasy_content["team"][[1]][[2]]$matchups
opp.score <- tmp$'0'$matchup$`0`$teams$`1`$team[[2]]$team_points["total"]
opp.score <- c(opp.score, sapply(as.character(1:(game.num-1)),
function(x)tmp[x][[x]]$matchup$`0`$teams$`1`$team[[2]]$team_points$total))
my.score <- tmp$'0'$matchup$`0`$teams$`0`$team[[2]]$team_points["total"]
my.score <- c(my.score, sapply(as.character(1:(game.num-1)),
function(x)tmp[x][[x]]$matchup$`0`$teams$`0`$team[[2]]$team_points$total))
my.df <- data.frame(cbind(game=rep(1:length(my.score), 2),
team=c(rep("me", length(my.score)), rep("them", length(my.score))),
score=as.numeric(c(my.score, opp.score))))
my.df$game <- factor(my.df$game, levels=1:game.num)
my.df$score <- as.numeric(as.character(my.df$score))
p1 <- ggplot(my.df, aes(x=game, y=score, color=team, group=team)) +
geom_point() + geom_line() + scale_y_continuous()
p1
game.key.list
my.team.stats.json
my.team.standings.json
my.team.matchups.list
my.team.matchups.list$fantasy_content["team"][[1]][[2]]$matchups
game.key
game.key.list
library(httpuv)
use_package(httpuv)
devtools::use_package(httpuv)
options("httr_oob_default" = T)
cKey     <- readLines("personal/keys/yahoo.txt", warn=FALSE)[1]
cSecret  <- readLines("personal/keys/yahoo.txt", warn=FALSE)[2]
yahoo    <-oauth_endpoints("yahoo")
myapp <- oauth_app("yahoo", key=cKey, secret=cSecret)
yahoo_token<- oauth2.0_token(yahoo, myapp, cache=T, use_oob = T)
sig <- sign_oauth1.0(myapp, yahoo_token$oauth_token, yahoo_token$oauth_token_secret)
save(sig,file="Fantasy.Rdata")
FromMyList<- function(x){
A<-myList$league$standings$teams[[x]]$name
B<-myList$league$standings$teams[[x]]$team_id
C<-unlist(myList$league$standings$teams[[x]]$team_standings$outcome_totals)
D<-unlist(myList$league$standings$teams[[x]]$team_standings$streak)
names(A)<-names(B)<-names(C)<-names(D)<-NULL
c(A,B,C,D)
}
Standings<- as.data.frame(matrix(unlist(lapply(1:10, function(x) FromMyList(x))),
byrow=T,
ncol=8),
row.names = NULL)
game.key
leagueID    <- "371.l.891274"
baseURL     <- "http://fantasysports.yahooapis.com/fantasy/v2/league/"
leagueID    <- "371.l.891274"
standingsURL<-paste(baseURL, leagueID, "/standings", sep="")
page <-GET(standingsURL,sig)
XMLstandings<- content(page, as="text", encoding="utf-8")
XMLstandings
doc<-xmlTreeParse(XMLstandings, useInternal=TRUE)
myList<- xmlToList(xmlRoot(doc))
myList
league.key
leagueID    <- league.key
standingsURL<-paste(baseURL, leagueID, "/standings", sep="")
page <-GET(standingsURL,sig)
XMLstandings<- content(page, as="text", encoding="utf-8")
XMLstandings
myapp
cSecret
cKey
yahoo_token
sig
save(sig,file="Fantasy.Rdata")
baseURL     <- "http://fantasysports.yahooapis.com/fantasy/v2/league/"
leagueID    <- league.key
standingsURL<-paste(baseURL, leagueID, "/standings", sep="")
page <-GET(standingsURL,sig)
page
XMLstandings<- content(page, as="text", encoding="utf-8")
XMLstandings
# Setup the app
cKey     <- readLines("personal/keys/yahoo.txt", warn=FALSE)[1]
cSecret  <- readLines("personal/keys/yahoo.txt", warn=FALSE)[2]
yahoo    <-oauth_endpoints("yahoo")
myapp <- oauth_app("yahoo", key=cKey, secret=cSecret)
yahoo_token<- oauth2.0_token(yahoo, myapp, cache=T, use_oob = T)
sig <- sign_oauth1.0(myapp, yahoo_token$oauth_token, yahoo_token$oauth_token_secret)
save(sig,file="Fantasy.Rdata")
baseURL     <- "http://fantasysports.yahooapis.com/fantasy/v2/league/"
leagueID    <- league.key
standingsURL<-paste(baseURL, leagueID, "/standings", sep="")
standingsURL
page <-GET(standingsURL,sig)
XMLstandings<- content(page, as="text", encoding="utf-8")
XMLstandings
league.key
league.key
ysql<-paste("select * from fantasysports.leagues where league_key=",league.key,"",sep="'")
ysql
query.url <- URLencode(paste(ysql, "?q=", query, "&format=", format, env.string, sep=""))
query.url <- URLencode(paste(league.url, "?q=", ysql, "&format=", format, env.string, sep=""))
query.url <- URLencode(paste(league.url, "?q=", ysql, "&format=", "/stats?format=json", sep=""))
query.url
my.league.json <- GET(paste0(team.url, my.team.key, "/stats?format=json"),
config(token = token))
my.league.json
my.league.list <- fromJSON(as.character(my.league.json), asText=T)
my.league.list
my.league.list <- fromJSON(as.character(my.league.json), asText=T)
my.league.list
my.league.json
my.league.json <- GET(query.url,config(token = token))
my.league.list <- fromJSON(as.character(my.league.json), asText=T)
library(dplyr)
library(httr)
library(XML)
library(RJSONIO)
library(ggplot2)
# saved my yahoo keys to a file, now, read them in...
creds <- read.table("personal/keys/yahoo.txt", stringsAsFactors=F)
consumer.key <- creds[1,1]
consumer.secret <- creds[2,1]
oauth_endpoints("yahoo")
myapp <- oauth_app("yahoo", key = consumer.key, secret = consumer.secret)
token <- oauth1.0_token(oauth_endpoints("yahoo"), myapp)
# need to get game id for my league...
ff.url <- "http://fantasysports.yahooapis.com/fantasy/v2/game/nfl?format=json"
game.key.json <- GET(ff.url, config(token = token))
game.key.list <- fromJSON(as.character(game.key.json), asText=T)
game.key <- game.key.list$fantasy_content$game[[1]]["game_key"]
# my personal leagueid, you will have to use your own, mine is private
league.id <- "891274"
league.key <- paste0(game.key, ".l.", league.id)
league.url <- "http://fantasysports.yahooapis.com/fantasy/v2/league/"
ysql<-paste("select * from fantasysports.leagues where league_key=",league.key,"",sep="'")
query.url <- URLencode(paste(league.url, "?q=", ysql, "&format=", "/stats?format=json", sep=""))
my.league.json <- GET(query.url,config(token = token))
my.league.list <- fromJSON(as.character(my.league.json), asText=T)
my.league.json
my.league.json
query.url
league.url
query.url <- URLencode(paste('https://query.yahooapis.com/v1/public/yql/', "?q=", ysql, "&format=", "/stats?format=json", sep=""))
my.league.json <- GET(query.url,config(token = token))
my.league.list <- fromJSON(as.character(my.league.json), asText=T)
my.league.json
query.url
query.url <- URLencode(paste('https://query.yahooapis.com/v1/public/yql', "?q=", ysql, "&format=", "/stats?format=json", sep=""))
my.league.json <- GET(query.url,config(token = token))
my.league.list <- fromJSON(as.character(my.league.json), asText=T)
query.url <- URLencode(paste('https://query.yahooapis.com/v1/public/yql', "?q=", ysql, "&format=", "/stats?format=json", sep=""))
my.league.json <- GET(query.url,config(token = token))
my.league.list <- fromJSON(as.character(my.league.json), asText=T)
my.league.json
league.key
ysql<-paste("select * from fantasysports.leagues where league_key=","371.l.891274.t.8","",sep="'")
query.url <- URLencode(paste('https://query.yahooapis.com/v1/public/yql', "?q=", ysql, "&format=", "/stats?format=json", sep=""))
my.league.json <- GET(query.url,config(token = token))
my.league.list <- fromJSON(as.character(my.league.json), asText=T)
my.league.json
query.url
query.url <- URLencode(paste('https://query.yahooapis.com/v1/public/yql', "?q=", ysql, "&format=json", sep=""))
my.league.json <- GET(query.url,config(token = token))
my.league.list <- fromJSON(as.character(my.league.json), asText=T)
https://query.yahooapis.com/v1/public/yql?q=select%20*%20from%20fantasysports.teams%20where%20team_key%3D'238.l.627060.t.8'&format=json&diagnostics=true&callback=
https://query.yahooapis.com/v1/public/yql/?q=select%20*%20from%20fantasysports.leagues%20where%20league_key='371.l.891274'&format=/stats?format=json
team.url <- "http://fantasysports.yahooapis.com/fantasy/v2//"
query.url
my.league.json
query.url <- URLencode(paste('https://query.yahooapis.com/v1/public/yql', "?q=", ysql, "&format=json", sep=""))
my.league.json <- GET(query.url,config(token = token))
my.league.list <- fromJSON(as.character(my.league.json), asText=T)
my.league.list
# saved my yahoo keys to a file, now, read them in...
creds <- read.table("personal/keys/yahoo.txt", stringsAsFactors=F)
consumer.key <- creds[1,1]
consumer.secret <- creds[2,1]
oauth_endpoints("yahoo")
myapp <- oauth_app("yahoo", key = consumer.key, secret = consumer.secret)
token <- oauth1.0_token(oauth_endpoints("yahoo"), myapp)
# need to get game id for my league...
ff.url <- "http://fantasysports.yahooapis.com/fantasy/v2/game/nfl?format=json"
game.key.json <- GET(ff.url, config(token = token))
game.key.list <- fromJSON(as.character(game.key.json), asText=T)
game.key <- game.key.list$fantasy_content$game[[1]]["game_key"]
# my personal leagueid, you will have to use your own, mine is private
league.id <- "891274"
league.key <- paste0(game.key, ".l.", league.id)
league.url <- "http://fantasysports.yahooapis.com/fantasy/v2/league/"
ysql<-paste("select * from fantasysports.leagues where league_key=","371.l.891274.t.8","",sep="'")
query.url <- URLencode(paste('https://query.yahooapis.com/v1/public/yql', "?q=", ysql, "&format=json", sep=""))
my.league.json <- GET(query.url,config(token = token))
my.league.list <- fromJSON(as.character(my.league.json), asText=T)
my.league.list
ysql
query.url <- URLencode(paste('http://fantasysports.yahooapis.com/fantasy/v2/public/yql', "?q=", ysql, "&format=json", sep=""))
my.league.json <- GET(query.url,config(token = token))
my.league.list <- fromJSON(as.character(my.league.json), asText=T)
my.league.json
my.league.list <- fromJSON(as.character(my.league.json), asText=T)
query.url <- URLencode(paste('http://fantasysports.yahooapis.com/fantasy/v2/', "?q=", ysql, "&format=json", sep=""))
query.url
query.url <- URLencode(paste('http://fantasysports.yahooapis.com/fantasy/v2/', "?q=", ysql, "&format=json", sep=""))
my.league.json <- GET(query.url,config(token = token))
my.league.json
query.url <- URLencode(paste('http://fantasysports.yahooapis.com/fantasy/v2/ysql', "?q=", ysql, "&format=json", sep=""))
my.league.json <- GET(query.url,config(token = token))
my.league.list <- fromJSON(as.character(my.league.json), asText=T)
my.league.list <- fromJSON(as.character(my.league.json), asText=T)
my.league.list
creds <- read.table("personal/keys/yahoo.txt", stringsAsFactors=F)
consumer.key <- creds[1,1]
consumer.secret <- creds[2,1]
oauth_endpoints("yahoo")
myapp <- oauth_app("yahoo", key = consumer.key, secret = consumer.secret)
token <- oauth1.0_token(oauth_endpoints("yahoo"), myapp)
# need to get game id for my league...
ff.url <- "http://fantasysports.yahooapis.com/fantasy/v2/game/nfl?format=json"
game.key.json <- GET(ff.url, config(token = token))
game.key.list <- fromJSON(as.character(game.key.json), asText=T)
game.key <- game.key.list$fantasy_content$game[[1]]["game_key"]
# my personal leagueid, you will have to use your own, mine is private
league.id <- "891274"
league.key <- paste0(game.key, ".l.", league.id)
league.url <- "http://fantasysports.yahooapis.com/fantasy/v2/league/"
ysql<-paste("select * from fantasysports.leagues where league_key=","371.l.891274.t.8","",sep="'")
query.url <- URLencode(paste('http://fantasysports.yahooapis.com/fantasy/v2/ysql', "?q=", ysql, "&format=json", sep=""))
my.league.json <- GET(query.url,config(token = token))
consumer.key
consumer.secret
ff.url <- "http://fantasysports.yahooapis.com/fantasy/v2/game/nfl?format=json"
game.key.json <- GET(ff.url, config(token = token))
game.key.list <- fromJSON(as.character(game.key.json), asText=T)
game.key <- game.key.list$fantasy_content$game[[1]]["game_key"]
league.id <- "891274"
league.key <- paste0(game.key, ".l.", league.id)
league.url <- "http://fantasysports.yahooapis.com/fantasy/v2/league/"
ysql<-paste("select * from fantasysports.leagues where league_key=","371.l.891274.t.8","",sep="'")
query.url <- URLencode(paste('http://fantasysports.yahooapis.com/fantasy/v2/ysql', "?q=", ysql, "&format=json", sep=""))
my.league.json <- GET(query.url,config(token = token))
my.league.list <- fromJSON(as.character(my.league.json), asText=T)
my.league.list
yahoo    <-oauth_endpoints("yahoo")
myapp <- oauth_app("yahoo", key=cKey, secret=cSecret)
yahoo_token<- oauth2.0_token(yahoo, myapp, cache=T, use_oob = T)
sig <- sign_oauth1.0(myapp, yahoo_token$oauth_token, yahoo_token$oauth_token_secret)
save(sig,file="Fantasy.Rdata")
Query the API
After registering your app and creating your credential, you are now ready to start pulling data. The API is based on the RESTful model so you’ll pull the data by building a URL. For the sake of this demonstration, I pulled the team standings in my league. Make sure to plug in your own league ID as mine will not work for you. The default data type is xml but you change the format to JSON by adding ‘?format=json’ to the end of the ULR.
baseURL     <- "http://fantasysports.yahooapis.com/fantasy/v2/league/"
my.team.key
leagueID    <- "371.l.891274"
standingsURL<-paste(baseURL, leagueID, "/standings", sep="")
standingsURL
page <-GET(standingsURL,sig)
XMLstandings<- content(page, as="text", encoding="utf-8")
XMLstandings
creds <- read.table("personal/keys/yahoo.txt", stringsAsFactors=F)
consumer.key <- creds[1,1]
consumer.secret <- creds[2,1]
oauth_endpoints("yahoo")
myapp <- oauth_app("yahoo", key = consumer.key, secret = consumer.secret)
token <- oauth1.0_token(oauth_endpoints("yahoo"), myapp)
# need to get game id for my league...
ff.url <- "http://fantasysports.yahooapis.com/fantasy/v2/game/nfl?format=json"
game.key.json <- GET(ff.url, config(token = token))
game.key.list <- fromJSON(as.character(game.key.json), asText=T)
game.key <- game.key.list$fantasy_content$game[[1]]["game_key"]
# my personal leagueid, you will have to use your own, mine is private
league.id <- "891274"
league.key <- paste0(game.key, ".l.", league.id)
league.url <- "http://fantasysports.yahooapis.com/fantasy/v2/league/"
my.team.id <- "4"
my.team.key <- paste0(league.key, ".t.", my.team.id)
team.url <- "http://fantasysports.yahooapis.com/fantasy/v2/team/"
# lots of endpoints to play with, more here...
# http://developer.yahoo.com/fantasysports/guide/
my.team.stats.json <- GET(paste0(team.url, my.team.key, "/stats?format=json"),
config(token = token))
my.team.standings.json <- GET(paste0(team.url, my.team.key,
"/standings?format=json"), config(token = token))
my.team.matchups.json <- GET(paste0(team.url, my.team.key,
"/matchups?format=json"), config(token = token))
my.team.matchups.list <- fromJSON(as.character(my.team.matchups.json), asText=T)
# number of games played
game.num <- 2
# get the opponent scores for my matchups for the entire season
tmp <- my.team.matchups.list$fantasy_content["team"][[1]][[2]]$matchups
opp.score <- tmp$'0'$matchup$`0`$teams$`1`$team[[2]]$team_points["total"]
opp.score <- c(opp.score, sapply(as.character(1:(game.num-1)),
function(x)tmp[x][[x]]$matchup$`0`$teams$`1`$team[[2]]$team_points$total))
my.score <- tmp$'0'$matchup$`0`$teams$`0`$team[[2]]$team_points["total"]
my.score <- c(my.score, sapply(as.character(1:(game.num-1)),
function(x)tmp[x][[x]]$matchup$`0`$teams$`0`$team[[2]]$team_points$total))
my.df <- data.frame(cbind(game=rep(1:length(my.score), 2),
team=c(rep("me", length(my.score)), rep("them", length(my.score))),
score=as.numeric(c(my.score, opp.score))))
my.df$game <- factor(my.df$game, levels=1:game.num)
my.df$score <- as.numeric(as.character(my.df$score))
p1 <- ggplot(my.df, aes(x=game, y=score, color=team, group=team)) +
geom_point() + geom_line() + scale_y_continuous()
p1
my.df
my.score
my.score
tmp
team.url
standingsURL
paste0(team.url, my.team.key,
"/matchups?format=json")
paste0(team.url, my.team.key,
"/standings?format=json")
standingsURL
page <-GET("http://fantasysports.yahooapis.com/fantasy/v2/team/371.l.891274.t.4/standings",sig)
XMLstandings<- content(page, as="text", encoding="utf-8")
XMLstandings
creds <- read.table("personal/keys/yahoo.txt", stringsAsFactors=F)
consumer.key <- creds[1,1]
consumer.secret <- creds[2,1]
oauth_endpoints("yahoo")
myapp <- oauth_app("yahoo", key = consumer.key, secret = consumer.secret)
token <- oauth1.0_token(oauth_endpoints("yahoo"), myapp)
page <-GET(standingsURL, config(token = token))
XMLstandings<- content(page, as="text", encoding="utf-8")
XMLstandings
doc<-xmlTreeParse(XMLstandings, useInternal=TRUE)
myList<- xmlToList(xmlRoot(doc))
myList
FromMyList<- function(x){
A<-myList$league$standings$teams[[x]]$name
B<-myList$league$standings$teams[[x]]$team_id
C<-unlist(myList$league$standings$teams[[x]]$team_standings$outcome_totals)
D<-unlist(myList$league$standings$teams[[x]]$team_standings$streak)
names(A)<-names(B)<-names(C)<-names(D)<-NULL
c(A,B,C,D)
}
Standings<- as.data.frame(matrix(unlist(lapply(1:10, function(x) FromMyList(x))),
byrow=T,
ncol=8),
row.names = NULL)
Standings
myList$league$standings$teams[[x]]$name
Standings<- as.data.frame(matrix(unlist(lapply(1:12, function(x) FromMyList(x))),
byrow=T,
ncol=8),
row.names = NULL)
Standings
Standings<- as.data.frame(matrix(unlist(lapply(1:10, function(x) FromMyList(x))),
byrow=T,
ncol=12),
row.names = NULL)
Standings
Standings<- as.data.frame(matrix(unlist(lapply(1:12, function(x) FromMyList(x))),
byrow=T,
ncol=12),
row.names = NULL)
Standings
Standings<- as.data.frame(matrix(unlist(lapply(1:12, function(x) FromMyList(x))),
byrow=T,
ncol=5),
row.names = NULL)
Standings
names(Standings)<- c("Team Name", "ID", "Wins", "Losses", "Ties", "Win Pct", "Streak Type", "Streak")
print(Standings, row.names = FALSE)
unlist(lapply(1:12, function(x) FromMyList(x))),
byrow=T,
ncol=8)
lapply(1:12, function(x) FromMyList(x))
names(Standings)<- c("Team Name", "ID",  "Streak Type", "Streak")
Standings<- as.data.frame(matrix(unlist(lapply(1:12, function(x) FromMyList(x))),
byrow=T,
ncol=5),
row.names = NULL)
names(Standings)<- c("Team Name", "ID",  "Streak Type", "Streak")
Standings
Standings<- as.data.frame(matrix(unlist(lapply(1:10, function(x) FromMyList(x))),
byrow=T,
ncol=8),
row.names = NULL)
print(Standings, row.names = FALSE)
Standings<- as.data.frame(matrix(unlist(lapply(1:12, function(x) FromMyList(x))),
byrow=T,
ncol=5),
row.names = NULL)
names(Standings)<- c("Team Name", "ID",  "Streak Type", "Streak")
print(Standings, row.names = FALSE)
